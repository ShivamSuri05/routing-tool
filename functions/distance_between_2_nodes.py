# -*- coding: utf-8 -*-
"""Distance_between_2_nodes.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1u6VhPof5zMD9g4hD_4E73J-orSLgeBYH
"""

#pip install osmnx

#pip install networkx

#pip install geopandas shapely matplotlib

from geopy.distance import geodesic
import osmnx as ox
import networkx as nx

def calculate_distance(coord1, coord2, use_road_network=True):
    """
    Calculate the distance between two GPS coordinates.

    Args:
        coord1 (tuple): The first coordinate as (latitude, longitude).
        coord2 (tuple): The second coordinate as (latitude, longitude).
        use_road_network (bool): If True, calculates distance using road network.
                                 If False, calculates straight-line geodesic distance.

    Returns:
        float: Distance in meters.
    """
    if not use_road_network:
        # Calculate geodesic distance
        distance_meters = geodesic(coord1, coord2).meters
        return distance_meters
    else:
        # Download road network for the area
        G = ox.graph_from_point(coord1, dist=5000, network_type='drive')

        # Find the nearest nodes in the road network
        node1 = ox.distance.nearest_nodes(G, coord1[1], coord1[0])
        node2 = ox.distance.nearest_nodes(G, coord2[1], coord2[0])

        # Calculate the shortest path distance using the road network
        try:
            distance_meters = nx.shortest_path_length(G, node1, node2, weight='length')
        except nx.NetworkXNoPath:
            distance_meters = None  # No path exists between the two points

        return distance_meters